Grammar

    0 $accept: expr $end

    1 expr: True And True
    2     | True And False
    3     | False And False
    4     | False And True
    5     | True Or True
    6     | True Or False
    7     | False Or False
    8     | False Or True
    9     | True Xor True
   10     | True Xor False
   11     | False Xor False
   12     | False Xor True
   13     | Not True
   14     | Not False


Terminals, with rules where they appear

$end (0) 0
error (256)
True (258) 1 2 4 5 6 8 9 10 12 13
False (259) 2 3 4 6 7 8 10 11 12 14
And (260) 1 2 3 4
Or (261) 5 6 7 8
Xor (262) 9 10 11 12
Not (263) 13 14


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
expr (10)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14, on right: 0


State 0

    0 $accept: . expr $end

    True   shift, and go to state 1
    False  shift, and go to state 2
    Not    shift, and go to state 3

    expr  go to state 4


State 1

    1 expr: True . And True
    2     | True . And False
    5     | True . Or True
    6     | True . Or False
    9     | True . Xor True
   10     | True . Xor False

    And  shift, and go to state 5
    Or   shift, and go to state 6
    Xor  shift, and go to state 7


State 2

    3 expr: False . And False
    4     | False . And True
    7     | False . Or False
    8     | False . Or True
   11     | False . Xor False
   12     | False . Xor True

    And  shift, and go to state 8
    Or   shift, and go to state 9
    Xor  shift, and go to state 10


State 3

   13 expr: Not . True
   14     | Not . False

    True   shift, and go to state 11
    False  shift, and go to state 12


State 4

    0 $accept: expr . $end

    $end  shift, and go to state 13


State 5

    1 expr: True And . True
    2     | True And . False

    True   shift, and go to state 14
    False  shift, and go to state 15


State 6

    5 expr: True Or . True
    6     | True Or . False

    True   shift, and go to state 16
    False  shift, and go to state 17


State 7

    9 expr: True Xor . True
   10     | True Xor . False

    True   shift, and go to state 18
    False  shift, and go to state 19


State 8

    3 expr: False And . False
    4     | False And . True

    True   shift, and go to state 20
    False  shift, and go to state 21


State 9

    7 expr: False Or . False
    8     | False Or . True

    True   shift, and go to state 22
    False  shift, and go to state 23


State 10

   11 expr: False Xor . False
   12     | False Xor . True

    True   shift, and go to state 24
    False  shift, and go to state 25


State 11

   13 expr: Not True .

    $default  reduce using rule 13 (expr)


State 12

   14 expr: Not False .

    $default  reduce using rule 14 (expr)


State 13

    0 $accept: expr $end .

    $default  accept


State 14

    1 expr: True And True .

    $default  reduce using rule 1 (expr)


State 15

    2 expr: True And False .

    $default  reduce using rule 2 (expr)


State 16

    5 expr: True Or True .

    $default  reduce using rule 5 (expr)


State 17

    6 expr: True Or False .

    $default  reduce using rule 6 (expr)


State 18

    9 expr: True Xor True .

    $default  reduce using rule 9 (expr)


State 19

   10 expr: True Xor False .

    $default  reduce using rule 10 (expr)


State 20

    4 expr: False And True .

    $default  reduce using rule 4 (expr)


State 21

    3 expr: False And False .

    $default  reduce using rule 3 (expr)


State 22

    8 expr: False Or True .

    $default  reduce using rule 8 (expr)


State 23

    7 expr: False Or False .

    $default  reduce using rule 7 (expr)


State 24

   12 expr: False Xor True .

    $default  reduce using rule 12 (expr)


State 25

   11 expr: False Xor False .

    $default  reduce using rule 11 (expr)
